-- This file is under copyright, and is bound to the agreement stated in the EULA.
-- Any 3rd party content has been used as either public domain or with permission.
-- Â© Copyright 2016-2017 Aritz Beobide-Cardinal All rights reserved.
ARCPhone.ClientFiles = {}
ARCPhone.ClientFiles["/contactphotos/0000000000.jpg"] = "/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAAYABgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1T4Q/s7WPijwcPE/ibWk0bQmZlj2uiPLtJUne2QvzAgDBJx9K6C2PwOudTi0lINQ/exhBqjyXCRBzxzlhhs9zHs/CvHLrxxqt94QttBlvJH0izmNxDbFRtjc5yc4z/E3GcfMfWu2+E+g/DO40OC68V63qcGoiVvMs44ZPJKA8AskbE5Hoyn+ZAMX41fBy9+DnicWk7faLK5BezuQMCZRjII7MMjI9x60Vs/tGfGPTfihdaRZ6Pazw6ZoUTwwyTn55d2wdMk4AjXBJycnOKKAPNa9J+McXw3Twhpv/AAh8l02qiRRciQTcx7DktvG3du2/c46+1FFAHm1FFFAH/9k="

ARCPhone.ClientFiles["/qr_decode/alignpat.js.txt"] = ""
ARCPhone.ClientFiles["/qr_decode/bitmat.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQpmdW5jdGlvbiBCaXRNYXRyaXgoIHdpZHRoLCAgaGVpZ2h0KQ0Kew0KCWlmKCFoZWlnaHQpDQoJCWhlaWdodD13aWR0aDsNCglpZiAod2lkdGggPCAxIHx8IGhlaWdodCA8IDEpDQoJew0KCQl0aHJvdyAiQm90aCBkaW1lbnNpb25zIG11c3QgYmUgZ3JlYXRlciB0aGFuIDAiOw0KCX0NCgl0aGlzLndpZHRoID0gd2lkdGg7DQoJdGhpcy5oZWlnaHQgPSBoZWlnaHQ7DQoJdmFyIHJvd1NpemUgPSB3aWR0aCA+PiA1Ow0KCWlmICgod2lkdGggJiAweDFmKSAhPSAwKQ0KCXsNCgkJcm93U2l6ZSsrOw0KCX0NCgl0aGlzLnJvd1NpemUgPSByb3dTaXplOw0KCXRoaXMuYml0cyA9IG5ldyBBcnJheShyb3dTaXplICogaGVpZ2h0KTsNCglmb3IodmFyIGk9MDtpPHRoaXMuYml0cy5sZW5ndGg7aSsrKQ0KCQl0aGlzLmJpdHNbaV09MDsNCgkNCgl0aGlzLl9fZGVmaW5lR2V0dGVyX18oIldpZHRoIiwgZnVuY3Rpb24oKQ0KCXsNCgkJcmV0dXJuIHRoaXMud2lkdGg7DQoJfSk7DQoJdGhpcy5fX2RlZmluZUdldHRlcl9fKCJIZWlnaHQiLCBmdW5jdGlvbigpDQoJew0KCQlyZXR1cm4gdGhpcy5oZWlnaHQ7DQoJfSk7DQoJdGhpcy5fX2RlZmluZUdldHRlcl9fKCJEaW1lbnNpb24iLCBmdW5jdGlvbigpDQoJew0KCQlpZiAodGhpcy53aWR0aCAhPSB0aGlzLmhlaWdodCkNCgkJew0KCQkJdGhyb3cgIkNhbid0IGNhbGwgZ2V0RGltZW5zaW9uKCkgb24gYSBub24tc3F1YXJlIG1hdHJpeCI7DQoJCX0NCgkJcmV0dXJuIHRoaXMud2lkdGg7DQoJfSk7DQoJDQoJdGhpcy5nZXRfUmVuYW1lZD1mdW5jdGlvbiggeCwgIHkpDQoJCXsNCgkJCXZhciBvZmZzZXQgPSB5ICogdGhpcy5yb3dTaXplICsgKHggPj4gNSk7DQoJCQlyZXR1cm4gKChVUlNoaWZ0KHRoaXMuYml0c1tvZmZzZXRdLCAoeCAmIDB4MWYpKSkgJiAxKSAhPSAwOw0KCQl9DQoJdGhpcy5zZXRfUmVuYW1lZD1mdW5jdGlvbiggeCwgIHkpDQoJCXsNCgkJCXZhciBvZmZzZXQgPSB5ICogdGhpcy5yb3dTaXplICsgKHggPj4gNSk7DQoJCQl0aGlzLmJpdHNbb2Zmc2V0XSB8PSAxIDw8ICh4ICYgMHgxZik7DQoJCX0NCgl0aGlzLmZsaXA9ZnVuY3Rpb24oIHgsICB5KQ0KCQl7DQoJCQl2YXIgb2Zmc2V0ID0geSAqIHRoaXMucm93U2l6ZSArICh4ID4+IDUpOw0KCQkJdGhpcy5iaXRzW29mZnNldF0gXj0gMSA8PCAoeCAmIDB4MWYpOw0KCQl9DQoJdGhpcy5jbGVhcj1mdW5jdGlvbigpDQoJCXsNCgkJCXZhciBtYXggPSB0aGlzLmJpdHMubGVuZ3RoOw0KCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBtYXg7IGkrKykNCgkJCXsNCgkJCQl0aGlzLmJpdHNbaV0gPSAwOw0KCQkJfQ0KCQl9DQoJdGhpcy5zZXRSZWdpb249ZnVuY3Rpb24oIGxlZnQsICB0b3AsICB3aWR0aCwgIGhlaWdodCkNCgkJew0KCQkJaWYgKHRvcCA8IDAgfHwgbGVmdCA8IDApDQoJCQl7DQoJCQkJdGhyb3cgIkxlZnQgYW5kIHRvcCBtdXN0IGJlIG5vbm5lZ2F0aXZlIjsNCgkJCX0NCgkJCWlmIChoZWlnaHQgPCAxIHx8IHdpZHRoIDwgMSkNCgkJCXsNCgkJCQl0aHJvdyAiSGVpZ2h0IGFuZCB3aWR0aCBtdXN0IGJlIGF0IGxlYXN0IDEiOw0KCQkJfQ0KCQkJdmFyIHJpZ2h0ID0gbGVmdCArIHdpZHRoOw0KCQkJdmFyIGJvdHRvbSA9IHRvcCArIGhlaWdodDsNCgkJCWlmIChib3R0b20gPiB0aGlzLmhlaWdodCB8fCByaWdodCA+IHRoaXMud2lkdGgpDQoJCQl7DQoJCQkJdGhyb3cgIlRoZSByZWdpb24gbXVzdCBmaXQgaW5zaWRlIHRoZSBtYXRyaXgiOw0KCQkJfQ0KCQkJZm9yICh2YXIgeSA9IHRvcDsgeSA8IGJvdHRvbTsgeSsrKQ0KCQkJew0KCQkJCXZhciBvZmZzZXQgPSB5ICogdGhpcy5yb3dTaXplOw0KCQkJCWZvciAodmFyIHggPSBsZWZ0OyB4IDwgcmlnaHQ7IHgrKykNCgkJCQl7DQoJCQkJCXRoaXMuYml0c1tvZmZzZXQgKyAoeCA+PiA1KV0gfD0gMSA8PCAoeCAmIDB4MWYpOw0KCQkJCX0NCgkJCX0NCgkJfQ0KfQ=="
ARCPhone.ClientFiles["/qr_decode/bmparser.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQpmdW5jdGlvbiBCaXRNYXRyaXhQYXJzZXIoYml0TWF0cml4KQ0Kew0KCXZhciBkaW1lbnNpb24gPSBiaXRNYXRyaXguRGltZW5zaW9uOw0KCWlmIChkaW1lbnNpb24gPCAyMSB8fCAoZGltZW5zaW9uICYgMHgwMykgIT0gMSkNCgl7DQoJCXRocm93ICJFcnJvciBCaXRNYXRyaXhQYXJzZXIiOw0KCX0NCgl0aGlzLmJpdE1hdHJpeCA9IGJpdE1hdHJpeDsNCgl0aGlzLnBhcnNlZFZlcnNpb24gPSBudWxsOw0KCXRoaXMucGFyc2VkRm9ybWF0SW5mbyA9IG51bGw7DQoJDQoJdGhpcy5jb3B5Qml0PWZ1bmN0aW9uKCBpLCAgaiwgIHZlcnNpb25CaXRzKQ0KCXsNCgkJcmV0dXJuIHRoaXMuYml0TWF0cml4LmdldF9SZW5hbWVkKGksIGopPyh2ZXJzaW9uQml0cyA8PCAxKSB8IDB4MTp2ZXJzaW9uQml0cyA8PCAxOw0KCX0NCgkNCgl0aGlzLnJlYWRGb3JtYXRJbmZvcm1hdGlvbj1mdW5jdGlvbigpDQoJew0KCQkJaWYgKHRoaXMucGFyc2VkRm9ybWF0SW5mbyAhPSBudWxsKQ0KCQkJew0KCQkJCXJldHVybiB0aGlzLnBhcnNlZEZvcm1hdEluZm87DQoJCQl9DQoJCQkNCgkJCS8vIFJlYWQgdG9wLWxlZnQgZm9ybWF0IGluZm8gYml0cw0KCQkJdmFyIGZvcm1hdEluZm9CaXRzID0gMDsNCgkJCWZvciAodmFyIGkgPSAwOyBpIDwgNjsgaSsrKQ0KCQkJew0KCQkJCWZvcm1hdEluZm9CaXRzID0gdGhpcy5jb3B5Qml0KGksIDgsIGZvcm1hdEluZm9CaXRzKTsNCgkJCX0NCgkJCS8vIC4uIGFuZCBza2lwIGEgYml0IGluIHRoZSB0aW1pbmcgcGF0dGVybiAuLi4NCgkJCWZvcm1hdEluZm9CaXRzID0gdGhpcy5jb3B5Qml0KDcsIDgsIGZvcm1hdEluZm9CaXRzKTsNCgkJCWZvcm1hdEluZm9CaXRzID0gdGhpcy5jb3B5Qml0KDgsIDgsIGZvcm1hdEluZm9CaXRzKTsNCgkJCWZvcm1hdEluZm9CaXRzID0gdGhpcy5jb3B5Qml0KDgsIDcsIGZvcm1hdEluZm9CaXRzKTsNCgkJCS8vIC4uIGFuZCBza2lwIGEgYml0IGluIHRoZSB0aW1pbmcgcGF0dGVybiAuLi4NCgkJCWZvciAodmFyIGogPSA1OyBqID49IDA7IGotLSkNCgkJCXsNCgkJCQlmb3JtYXRJbmZvQml0cyA9IHRoaXMuY29weUJpdCg4LCBqLCBmb3JtYXRJbmZvQml0cyk7DQoJCQl9DQoJCQkNCgkJCXRoaXMucGFyc2VkRm9ybWF0SW5mbyA9IEZvcm1hdEluZm9ybWF0aW9uLmRlY29kZUZvcm1hdEluZm9ybWF0aW9uKGZvcm1hdEluZm9CaXRzKTsNCgkJCWlmICh0aGlzLnBhcnNlZEZvcm1hdEluZm8gIT0gbnVsbCkNCgkJCXsNCgkJCQlyZXR1cm4gdGhpcy5wYXJzZWRGb3JtYXRJbmZvOw0KCQkJfQ0KCQkJDQoJCQkvLyBIbW0sIGZhaWxlZC4gVHJ5IHRoZSB0b3AtcmlnaHQvYm90dG9tLWxlZnQgcGF0dGVybg0KCQkJdmFyIGRpbWVuc2lvbiA9IHRoaXMuYml0TWF0cml4LkRpbWVuc2lvbjsNCgkJCWZvcm1hdEluZm9CaXRzID0gMDsNCgkJCXZhciBpTWluID0gZGltZW5zaW9uIC0gODsNCgkJCWZvciAodmFyIGkgPSBkaW1lbnNpb24gLSAxOyBpID49IGlNaW47IGktLSkNCgkJCXsNCgkJCQlmb3JtYXRJbmZvQml0cyA9IHRoaXMuY29weUJpdChpLCA4LCBmb3JtYXRJbmZvQml0cyk7DQoJCQl9DQoJCQlmb3IgKHZhciBqID0gZGltZW5zaW9uIC0gNzsgaiA8IGRpbWVuc2lvbjsgaisrKQ0KCQkJew0KCQkJCWZvcm1hdEluZm9CaXRzID0gdGhpcy5jb3B5Qml0KDgsIGosIGZvcm1hdEluZm9CaXRzKTsNCgkJCX0NCgkJCQ0KCQkJdGhpcy5wYXJzZWRGb3JtYXRJbmZvID0gRm9ybWF0SW5mb3JtYXRpb24uZGVjb2RlRm9ybWF0SW5mb3JtYXRpb24oZm9ybWF0SW5mb0JpdHMpOw0KCQkJaWYgKHRoaXMucGFyc2VkRm9ybWF0SW5mbyAhPSBudWxsKQ0KCQkJew0KCQkJCXJldHVybiB0aGlzLnBhcnNlZEZvcm1hdEluZm87DQoJCQl9DQoJCQl0aHJvdyAiRXJyb3IgcmVhZEZvcm1hdEluZm9ybWF0aW9uIjsJDQoJfQ0KCXRoaXMucmVhZFZlcnNpb249ZnVuY3Rpb24oKQ0KCQl7DQoJCQkNCgkJCWlmICh0aGlzLnBhcnNlZFZlcnNpb24gIT0gbnVsbCkNCgkJCXsNCgkJCQlyZXR1cm4gdGhpcy5wYXJzZWRWZXJzaW9uOw0KCQkJfQ0KCQkJDQoJCQl2YXIgZGltZW5zaW9uID0gdGhpcy5iaXRNYXRyaXguRGltZW5zaW9uOw0KCQkJDQoJCQl2YXIgcHJvdmlzaW9uYWxWZXJzaW9uID0gKGRpbWVuc2lvbiAtIDE3KSA+PiAyOw0KCQkJaWYgKHByb3Zpc2lvbmFsVmVyc2lvbiA8PSA2KQ0KCQkJew0KCQkJCXJldHVybiBWZXJzaW9uLmdldFZlcnNpb25Gb3JOdW1iZXIocHJvdmlzaW9uYWxWZXJzaW9uKTsNCgkJCX0NCgkJCQ0KCQkJLy8gUmVhZCB0b3AtcmlnaHQgdmVyc2lvbiBpbmZvOiAzIHdpZGUgYnkgNiB0YWxsDQoJCQl2YXIgdmVyc2lvbkJpdHMgPSAwOw0KCQkJdmFyIGlqTWluID0gZGltZW5zaW9uIC0gMTE7DQoJCQlmb3IgKHZhciBqID0gNTsgaiA+PSAwOyBqLS0pDQoJCQl7DQoJCQkJZm9yICh2YXIgaSA9IGRpbWVuc2lvbiAtIDk7IGkgPj0gaWpNaW47IGktLSkNCgkJCQl7DQoJCQkJCXZlcnNpb25CaXRzID0gdGhpcy5jb3B5Qml0KGksIGosIHZlcnNpb25CaXRzKTsNCgkJCQl9DQoJCQl9DQoJCQkNCgkJCXRoaXMucGFyc2VkVmVyc2lvbiA9IFZlcnNpb24uZGVjb2RlVmVyc2lvbkluZm9ybWF0aW9uKHZlcnNpb25CaXRzKTsNCgkJCWlmICh0aGlzLnBhcnNlZFZlcnNpb24gIT0gbnVsbCAmJiB0aGlzLnBhcnNlZFZlcnNpb24uRGltZW5zaW9uRm9yVmVyc2lvbiA9PSBkaW1lbnNpb24pDQoJCQl7DQoJCQkJcmV0dXJuIHRoaXMucGFyc2VkVmVyc2lvbjsNCgkJCX0NCgkJCQ0KCQkJLy8gSG1tLCBmYWlsZWQuIFRyeSBib3R0b20gbGVmdDogNiB3aWRlIGJ5IDMgdGFsbA0KCQkJdmVyc2lvbkJpdHMgPSAwOw0KCQkJZm9yICh2YXIgaSA9IDU7IGkgPj0gMDsgaS0tKQ0KCQkJew0KCQkJCWZvciAodmFyIGogPSBkaW1lbnNpb24gLSA5OyBqID49IGlqTWluOyBqLS0pDQoJCQkJew0KCQkJCQl2ZXJzaW9uQml0cyA9IHRoaXMuY29weUJpdChpLCBqLCB2ZXJzaW9uQml0cyk7DQoJCQkJfQ0KCQkJfQ0KCQkJDQoJCQl0aGlzLnBhcnNlZFZlcnNpb24gPSBWZXJzaW9uLmRlY29kZVZlcnNpb25JbmZvcm1hdGlvbih2ZXJzaW9uQml0cyk7DQoJCQlpZiAodGhpcy5wYXJzZWRWZXJzaW9uICE9IG51bGwgJiYgdGhpcy5wYXJzZWRWZXJzaW9uLkRpbWVuc2lvbkZvclZlcnNpb24gPT0gZGltZW5zaW9uKQ0KCQkJew0KCQkJCXJldHVybiB0aGlzLnBhcnNlZFZlcnNpb247DQoJCQl9DQoJCQl0aHJvdyAiRXJyb3IgcmVhZFZlcnNpb24iOw0KCQl9DQoJdGhpcy5yZWFkQ29kZXdvcmRzPWZ1bmN0aW9uKCkNCgkJew0KCQkJDQoJCQl2YXIgZm9ybWF0SW5mbyA9IHRoaXMucmVhZEZvcm1hdEluZm9ybWF0aW9uKCk7DQoJCQl2YXIgdmVyc2lvbiA9IHRoaXMucmVhZFZlcnNpb24oKTsNCgkJCQ0KCQkJLy8gR2V0IHRoZSBkYXRhIG1hc2sgZm9yIHRoZSBmb3JtYXQgdXNlZCBpbiB0aGlzIFFSIENvZGUuIFRoaXMgd2lsbCBleGNsdWRlDQoJCQkvLyBzb21lIGJpdHMgZnJvbSByZWFkaW5nIGFzIHdlIHdpbmQgdGhyb3VnaCB0aGUgYml0IG1hdHJpeC4NCgkJCXZhciBkYXRhTWFzayA9IERhdGFNYXNrLmZvclJlZmVyZW5jZSggZm9ybWF0SW5mby5EYXRhTWFzayk7DQoJCQl2YXIgZGltZW5zaW9uID0gdGhpcy5iaXRNYXRyaXguRGltZW5zaW9uOw0KCQkJZGF0YU1hc2sudW5tYXNrQml0TWF0cml4KHRoaXMuYml0TWF0cml4LCBkaW1lbnNpb24pOw0KCQkJDQoJCQl2YXIgZnVuY3Rpb25QYXR0ZXJuID0gdmVyc2lvbi5idWlsZEZ1bmN0aW9uUGF0dGVybigpOw0KCQkJDQoJCQl2YXIgcmVhZGluZ1VwID0gdHJ1ZTsNCgkJCXZhciByZXN1bHQgPSBuZXcgQXJyYXkodmVyc2lvbi5Ub3RhbENvZGV3b3Jkcyk7DQoJCQl2YXIgcmVzdWx0T2Zmc2V0ID0gMDsNCgkJCXZhciBjdXJyZW50Qnl0ZSA9IDA7DQoJCQl2YXIgYml0c1JlYWQgPSAwOw0KCQkJLy8gUmVhZCBjb2x1bW5zIGluIHBhaXJzLCBmcm9tIHJpZ2h0IHRvIGxlZnQNCgkJCWZvciAodmFyIGogPSBkaW1lbnNpb24gLSAxOyBqID4gMDsgaiAtPSAyKQ0KCQkJew0KCQkJCWlmIChqID09IDYpDQoJCQkJew0KCQkJCQkvLyBTa2lwIHdob2xlIGNvbHVtbiB3aXRoIHZlcnRpY2FsIGFsaWdubWVudCBwYXR0ZXJuOw0KCQkJCQkvLyBzYXZlcyB0aW1lIGFuZCBtYWtlcyB0aGUgb3RoZXIgY29kZSBwcm9jZWVkIG1vcmUgY2xlYW5seQ0KCQkJCQlqLS07DQoJCQkJfQ0KCQkJCS8vIFJlYWQgYWx0ZXJuYXRpbmdseSBmcm9tIGJvdHRvbSB0byB0b3AgdGhlbiB0b3AgdG8gYm90dG9tDQoJCQkJZm9yICh2YXIgY291bnQgPSAwOyBjb3VudCA8IGRpbWVuc2lvbjsgY291bnQrKykNCgkJCQl7DQoJCQkJCXZhciBpID0gcmVhZGluZ1VwP2RpbWVuc2lvbiAtIDEgLSBjb3VudDpjb3VudDsNCgkJCQkJZm9yICh2YXIgY29sID0gMDsgY29sIDwgMjsgY29sKyspDQoJCQkJCXsNCgkJCQkJCS8vIElnbm9yZSBiaXRzIGNvdmVyZWQgYnkgdGhlIGZ1bmN0aW9uIHBhdHRlcm4NCgkJCQkJCWlmICghZnVuY3Rpb25QYXR0ZXJuLmdldF9SZW5hbWVkKGogLSBjb2wsIGkpKQ0KCQkJCQkJew0KCQkJCQkJCS8vIFJlYWQgYSBiaXQNCgkJCQkJCQliaXRzUmVhZCsrOw0KCQkJCQkJCWN1cnJlbnRCeXRlIDw8PSAxOw0KCQkJCQkJCWlmICh0aGlzLmJpdE1hdHJpeC5nZXRfUmVuYW1lZChqIC0gY29sLCBpKSkNCgkJCQkJCQl7DQoJCQkJCQkJCWN1cnJlbnRCeXRlIHw9IDE7DQoJCQkJCQkJfQ0KCQkJCQkJCS8vIElmIHdlJ3ZlIG1hZGUgYSB3aG9sZSBieXRlLCBzYXZlIGl0IG9mZg0KCQkJCQkJCWlmIChiaXRzUmVhZCA9PSA4KQ0KCQkJCQkJCXsNCgkJCQkJCQkJcmVzdWx0W3Jlc3VsdE9mZnNldCsrXSA9ICBjdXJyZW50Qnl0ZTsNCgkJCQkJCQkJYml0c1JlYWQgPSAwOw0KCQkJCQkJCQljdXJyZW50Qnl0ZSA9IDA7DQoJCQkJCQkJfQ0KCQkJCQkJfQ0KCQkJCQl9DQoJCQkJfQ0KCQkJCXJlYWRpbmdVcCBePSB0cnVlOyAvLyByZWFkaW5nVXAgPSAhcmVhZGluZ1VwOyAvLyBzd2l0Y2ggZGlyZWN0aW9ucw0KCQkJfQ0KCQkJaWYgKHJlc3VsdE9mZnNldCAhPSB2ZXJzaW9uLlRvdGFsQ29kZXdvcmRzKQ0KCQkJew0KCQkJCXRocm93ICJFcnJvciByZWFkQ29kZXdvcmRzIjsNCgkJCX0NCgkJCXJldHVybiByZXN1bHQ7DQoJCX0NCn0="
ARCPhone.ClientFiles["/qr_decode/datablock.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQpmdW5jdGlvbiBEYXRhQmxvY2sobnVtRGF0YUNvZGV3b3JkcywgIGNvZGV3b3JkcykNCnsNCgl0aGlzLm51bURhdGFDb2Rld29yZHMgPSBudW1EYXRhQ29kZXdvcmRzOw0KCXRoaXMuY29kZXdvcmRzID0gY29kZXdvcmRzOw0KCQ0KCXRoaXMuX19kZWZpbmVHZXR0ZXJfXygiTnVtRGF0YUNvZGV3b3JkcyIsIGZ1bmN0aW9uKCkNCgl7DQoJCXJldHVybiB0aGlzLm51bURhdGFDb2Rld29yZHM7DQoJfSk7DQoJdGhpcy5fX2RlZmluZUdldHRlcl9fKCJDb2Rld29yZHMiLCBmdW5jdGlvbigpDQoJew0KCQlyZXR1cm4gdGhpcy5jb2Rld29yZHM7DQoJfSk7DQp9CQ0KCQ0KRGF0YUJsb2NrLmdldERhdGFCbG9ja3M9ZnVuY3Rpb24ocmF3Q29kZXdvcmRzLCAgdmVyc2lvbiwgIGVjTGV2ZWwpDQp7DQoJDQoJaWYgKHJhd0NvZGV3b3Jkcy5sZW5ndGggIT0gdmVyc2lvbi5Ub3RhbENvZGV3b3JkcykNCgl7DQoJCXRocm93ICJBcmd1bWVudEV4Y2VwdGlvbiI7DQoJfQ0KCQ0KCS8vIEZpZ3VyZSBvdXQgdGhlIG51bWJlciBhbmQgc2l6ZSBvZiBkYXRhIGJsb2NrcyB1c2VkIGJ5IHRoaXMgdmVyc2lvbiBhbmQNCgkvLyBlcnJvciBjb3JyZWN0aW9uIGxldmVsDQoJdmFyIGVjQmxvY2tzID0gdmVyc2lvbi5nZXRFQ0Jsb2Nrc0ZvckxldmVsKGVjTGV2ZWwpOw0KCQ0KCS8vIEZpcnN0IGNvdW50IHRoZSB0b3RhbCBudW1iZXIgb2YgZGF0YSBibG9ja3MNCgl2YXIgdG90YWxCbG9ja3MgPSAwOw0KCXZhciBlY0Jsb2NrQXJyYXkgPSBlY0Jsb2Nrcy5nZXRFQ0Jsb2NrcygpOw0KCWZvciAodmFyIGkgPSAwOyBpIDwgZWNCbG9ja0FycmF5Lmxlbmd0aDsgaSsrKQ0KCXsNCgkJdG90YWxCbG9ja3MgKz0gZWNCbG9ja0FycmF5W2ldLkNvdW50Ow0KCX0NCgkNCgkvLyBOb3cgZXN0YWJsaXNoIERhdGFCbG9ja3Mgb2YgdGhlIGFwcHJvcHJpYXRlIHNpemUgYW5kIG51bWJlciBvZiBkYXRhIGNvZGV3b3Jkcw0KCXZhciByZXN1bHQgPSBuZXcgQXJyYXkodG90YWxCbG9ja3MpOw0KCXZhciBudW1SZXN1bHRCbG9ja3MgPSAwOw0KCWZvciAodmFyIGogPSAwOyBqIDwgZWNCbG9ja0FycmF5Lmxlbmd0aDsgaisrKQ0KCXsNCgkJdmFyIGVjQmxvY2sgPSBlY0Jsb2NrQXJyYXlbal07DQoJCWZvciAodmFyIGkgPSAwOyBpIDwgZWNCbG9jay5Db3VudDsgaSsrKQ0KCQl7DQoJCQl2YXIgbnVtRGF0YUNvZGV3b3JkcyA9IGVjQmxvY2suRGF0YUNvZGV3b3JkczsNCgkJCXZhciBudW1CbG9ja0NvZGV3b3JkcyA9IGVjQmxvY2tzLkVDQ29kZXdvcmRzUGVyQmxvY2sgKyBudW1EYXRhQ29kZXdvcmRzOw0KCQkJcmVzdWx0W251bVJlc3VsdEJsb2NrcysrXSA9IG5ldyBEYXRhQmxvY2sobnVtRGF0YUNvZGV3b3JkcywgbmV3IEFycmF5KG51bUJsb2NrQ29kZXdvcmRzKSk7DQoJCX0NCgl9DQoJDQoJLy8gQWxsIGJsb2NrcyBoYXZlIHRoZSBzYW1lIGFtb3VudCBvZiBkYXRhLCBleGNlcHQgdGhhdCB0aGUgbGFzdCBuDQoJLy8gKHdoZXJlIG4gbWF5IGJlIDApIGhhdmUgMSBtb3JlIGJ5dGUuIEZpZ3VyZSBvdXQgd2hlcmUgdGhlc2Ugc3RhcnQuDQoJdmFyIHNob3J0ZXJCbG9ja3NUb3RhbENvZGV3b3JkcyA9IHJlc3VsdFswXS5jb2Rld29yZHMubGVuZ3RoOw0KCXZhciBsb25nZXJCbG9ja3NTdGFydEF0ID0gcmVzdWx0Lmxlbmd0aCAtIDE7DQoJd2hpbGUgKGxvbmdlckJsb2Nrc1N0YXJ0QXQgPj0gMCkNCgl7DQoJCXZhciBudW1Db2Rld29yZHMgPSByZXN1bHRbbG9uZ2VyQmxvY2tzU3RhcnRBdF0uY29kZXdvcmRzLmxlbmd0aDsNCgkJaWYgKG51bUNvZGV3b3JkcyA9PSBzaG9ydGVyQmxvY2tzVG90YWxDb2Rld29yZHMpDQoJCXsNCgkJCWJyZWFrOw0KCQl9DQoJCWxvbmdlckJsb2Nrc1N0YXJ0QXQtLTsNCgl9DQoJbG9uZ2VyQmxvY2tzU3RhcnRBdCsrOw0KCQ0KCXZhciBzaG9ydGVyQmxvY2tzTnVtRGF0YUNvZGV3b3JkcyA9IHNob3J0ZXJCbG9ja3NUb3RhbENvZGV3b3JkcyAtIGVjQmxvY2tzLkVDQ29kZXdvcmRzUGVyQmxvY2s7DQoJLy8gVGhlIGxhc3QgZWxlbWVudHMgb2YgcmVzdWx0IG1heSBiZSAxIGVsZW1lbnQgbG9uZ2VyOw0KCS8vIGZpcnN0IGZpbGwgb3V0IGFzIG1hbnkgZWxlbWVudHMgYXMgYWxsIG9mIHRoZW0gaGF2ZQ0KCXZhciByYXdDb2Rld29yZHNPZmZzZXQgPSAwOw0KCWZvciAodmFyIGkgPSAwOyBpIDwgc2hvcnRlckJsb2Nrc051bURhdGFDb2Rld29yZHM7IGkrKykNCgl7DQoJCWZvciAodmFyIGogPSAwOyBqIDwgbnVtUmVzdWx0QmxvY2tzOyBqKyspDQoJCXsNCgkJCXJlc3VsdFtqXS5jb2Rld29yZHNbaV0gPSByYXdDb2Rld29yZHNbcmF3Q29kZXdvcmRzT2Zmc2V0KytdOw0KCQl9DQoJfQ0KCS8vIEZpbGwgb3V0IHRoZSBsYXN0IGRhdGEgYmxvY2sgaW4gdGhlIGxvbmdlciBvbmVzDQoJZm9yICh2YXIgaiA9IGxvbmdlckJsb2Nrc1N0YXJ0QXQ7IGogPCBudW1SZXN1bHRCbG9ja3M7IGorKykNCgl7DQoJCXJlc3VsdFtqXS5jb2Rld29yZHNbc2hvcnRlckJsb2Nrc051bURhdGFDb2Rld29yZHNdID0gcmF3Q29kZXdvcmRzW3Jhd0NvZGV3b3Jkc09mZnNldCsrXTsNCgl9DQoJLy8gTm93IGFkZCBpbiBlcnJvciBjb3JyZWN0aW9uIGJsb2Nrcw0KCXZhciBtYXggPSByZXN1bHRbMF0uY29kZXdvcmRzLmxlbmd0aDsNCglmb3IgKHZhciBpID0gc2hvcnRlckJsb2Nrc051bURhdGFDb2Rld29yZHM7IGkgPCBtYXg7IGkrKykNCgl7DQoJCWZvciAodmFyIGogPSAwOyBqIDwgbnVtUmVzdWx0QmxvY2tzOyBqKyspDQoJCXsNCgkJCXZhciBpT2Zmc2V0ID0gaiA8IGxvbmdlckJsb2Nrc1N0YXJ0QXQ/aTppICsgMTsNCgkJCXJlc3VsdFtqXS5jb2Rld29yZHNbaU9mZnNldF0gPSByYXdDb2Rld29yZHNbcmF3Q29kZXdvcmRzT2Zmc2V0KytdOw0KCQl9DQoJfQ0KCXJldHVybiByZXN1bHQ7DQp9DQo="
ARCPhone.ClientFiles["/qr_decode/databr.js.txt"] = ""
ARCPhone.ClientFiles["/qr_decode/datamask.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQp2YXIgRGF0YU1hc2sgPSB7fTsNCg0KRGF0YU1hc2suZm9yUmVmZXJlbmNlID0gZnVuY3Rpb24ocmVmZXJlbmNlKQ0Kew0KCWlmIChyZWZlcmVuY2UgPCAwIHx8IHJlZmVyZW5jZSA+IDcpDQoJew0KCQl0aHJvdyAiU3lzdGVtLkFyZ3VtZW50RXhjZXB0aW9uIjsNCgl9DQoJcmV0dXJuIERhdGFNYXNrLkRBVEFfTUFTS1NbcmVmZXJlbmNlXTsNCn0NCg0KZnVuY3Rpb24gRGF0YU1hc2swMDAoKQ0Kew0KCXRoaXMudW5tYXNrQml0TWF0cml4PWZ1bmN0aW9uKGJpdHMsICBkaW1lbnNpb24pDQoJew0KCQlmb3IgKHZhciBpID0gMDsgaSA8IGRpbWVuc2lvbjsgaSsrKQ0KCQl7DQoJCQlmb3IgKHZhciBqID0gMDsgaiA8IGRpbWVuc2lvbjsgaisrKQ0KCQkJew0KCQkJCWlmICh0aGlzLmlzTWFza2VkKGksIGopKQ0KCQkJCXsNCgkJCQkJYml0cy5mbGlwKGosIGkpOw0KCQkJCX0NCgkJCX0NCgkJfQ0KCX0NCgl0aGlzLmlzTWFza2VkPWZ1bmN0aW9uKCBpLCAgaikNCgl7DQoJCXJldHVybiAoKGkgKyBqKSAmIDB4MDEpID09IDA7DQoJfQ0KfQ0KDQpmdW5jdGlvbiBEYXRhTWFzazAwMSgpDQp7DQoJdGhpcy51bm1hc2tCaXRNYXRyaXg9ZnVuY3Rpb24oYml0cywgIGRpbWVuc2lvbikNCgl7DQoJCWZvciAodmFyIGkgPSAwOyBpIDwgZGltZW5zaW9uOyBpKyspDQoJCXsNCgkJCWZvciAodmFyIGogPSAwOyBqIDwgZGltZW5zaW9uOyBqKyspDQoJCQl7DQoJCQkJaWYgKHRoaXMuaXNNYXNrZWQoaSwgaikpDQoJCQkJew0KCQkJCQliaXRzLmZsaXAoaiwgaSk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfQ0KCXRoaXMuaXNNYXNrZWQ9ZnVuY3Rpb24oIGksICBqKQ0KCXsNCgkJcmV0dXJuIChpICYgMHgwMSkgPT0gMDsNCgl9DQp9DQoNCmZ1bmN0aW9uIERhdGFNYXNrMDEwKCkNCnsNCgl0aGlzLnVubWFza0JpdE1hdHJpeD1mdW5jdGlvbihiaXRzLCAgZGltZW5zaW9uKQ0KCXsNCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBkaW1lbnNpb247IGkrKykNCgkJew0KCQkJZm9yICh2YXIgaiA9IDA7IGogPCBkaW1lbnNpb247IGorKykNCgkJCXsNCgkJCQlpZiAodGhpcy5pc01hc2tlZChpLCBqKSkNCgkJCQl7DQoJCQkJCWJpdHMuZmxpcChqLCBpKTsNCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQoJdGhpcy5pc01hc2tlZD1mdW5jdGlvbiggaSwgIGopDQoJew0KCQlyZXR1cm4gaiAlIDMgPT0gMDsNCgl9DQp9DQoNCmZ1bmN0aW9uIERhdGFNYXNrMDExKCkNCnsNCgl0aGlzLnVubWFza0JpdE1hdHJpeD1mdW5jdGlvbihiaXRzLCAgZGltZW5zaW9uKQ0KCXsNCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBkaW1lbnNpb247IGkrKykNCgkJew0KCQkJZm9yICh2YXIgaiA9IDA7IGogPCBkaW1lbnNpb247IGorKykNCgkJCXsNCgkJCQlpZiAodGhpcy5pc01hc2tlZChpLCBqKSkNCgkJCQl7DQoJCQkJCWJpdHMuZmxpcChqLCBpKTsNCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQoJdGhpcy5pc01hc2tlZD1mdW5jdGlvbiggaSwgIGopDQoJew0KCQlyZXR1cm4gKGkgKyBqKSAlIDMgPT0gMDsNCgl9DQp9DQoNCmZ1bmN0aW9uIERhdGFNYXNrMTAwKCkNCnsNCgl0aGlzLnVubWFza0JpdE1hdHJpeD1mdW5jdGlvbihiaXRzLCAgZGltZW5zaW9uKQ0KCXsNCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBkaW1lbnNpb247IGkrKykNCgkJew0KCQkJZm9yICh2YXIgaiA9IDA7IGogPCBkaW1lbnNpb247IGorKykNCgkJCXsNCgkJCQlpZiAodGhpcy5pc01hc2tlZChpLCBqKSkNCgkJCQl7DQoJCQkJCWJpdHMuZmxpcChqLCBpKTsNCgkJCQl9DQoJCQl9DQoJCX0NCgl9DQoJdGhpcy5pc01hc2tlZD1mdW5jdGlvbiggaSwgIGopDQoJew0KCQlyZXR1cm4gKCgoVVJTaGlmdChpLCAxKSkgKyAoaiAvIDMpKSAmIDB4MDEpID09IDA7DQoJfQ0KfQ0KDQpmdW5jdGlvbiBEYXRhTWFzazEwMSgpDQp7DQoJdGhpcy51bm1hc2tCaXRNYXRyaXg9ZnVuY3Rpb24oYml0cywgIGRpbWVuc2lvbikNCgl7DQoJCWZvciAodmFyIGkgPSAwOyBpIDwgZGltZW5zaW9uOyBpKyspDQoJCXsNCgkJCWZvciAodmFyIGogPSAwOyBqIDwgZGltZW5zaW9uOyBqKyspDQoJCQl7DQoJCQkJaWYgKHRoaXMuaXNNYXNrZWQoaSwgaikpDQoJCQkJew0KCQkJCQliaXRzLmZsaXAoaiwgaSk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfQ0KCXRoaXMuaXNNYXNrZWQ9ZnVuY3Rpb24oIGksICBqKQ0KCXsNCgkJdmFyIHRlbXAgPSBpICogajsNCgkJcmV0dXJuICh0ZW1wICYgMHgwMSkgKyAodGVtcCAlIDMpID09IDA7DQoJfQ0KfQ0KDQpmdW5jdGlvbiBEYXRhTWFzazExMCgpDQp7DQoJdGhpcy51bm1hc2tCaXRNYXRyaXg9ZnVuY3Rpb24oYml0cywgIGRpbWVuc2lvbikNCgl7DQoJCWZvciAodmFyIGkgPSAwOyBpIDwgZGltZW5zaW9uOyBpKyspDQoJCXsNCgkJCWZvciAodmFyIGogPSAwOyBqIDwgZGltZW5zaW9uOyBqKyspDQoJCQl7DQoJCQkJaWYgKHRoaXMuaXNNYXNrZWQoaSwgaikpDQoJCQkJew0KCQkJCQliaXRzLmZsaXAoaiwgaSk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfQ0KCXRoaXMuaXNNYXNrZWQ9ZnVuY3Rpb24oIGksICBqKQ0KCXsNCgkJdmFyIHRlbXAgPSBpICogajsNCgkJcmV0dXJuICgoKHRlbXAgJiAweDAxKSArICh0ZW1wICUgMykpICYgMHgwMSkgPT0gMDsNCgl9DQp9DQpmdW5jdGlvbiBEYXRhTWFzazExMSgpDQp7DQoJdGhpcy51bm1hc2tCaXRNYXRyaXg9ZnVuY3Rpb24oYml0cywgIGRpbWVuc2lvbikNCgl7DQoJCWZvciAodmFyIGkgPSAwOyBpIDwgZGltZW5zaW9uOyBpKyspDQoJCXsNCgkJCWZvciAodmFyIGogPSAwOyBqIDwgZGltZW5zaW9uOyBqKyspDQoJCQl7DQoJCQkJaWYgKHRoaXMuaXNNYXNrZWQoaSwgaikpDQoJCQkJew0KCQkJCQliaXRzLmZsaXAoaiwgaSk7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJfQ0KCXRoaXMuaXNNYXNrZWQ9ZnVuY3Rpb24oIGksICBqKQ0KCXsNCgkJcmV0dXJuICgoKChpICsgaikgJiAweDAxKSArICgoaSAqIGopICUgMykpICYgMHgwMSkgPT0gMDsNCgl9DQp9DQoNCkRhdGFNYXNrLkRBVEFfTUFTS1MgPSBuZXcgQXJyYXkobmV3IERhdGFNYXNrMDAwKCksIG5ldyBEYXRhTWFzazAwMSgpLCBuZXcgRGF0YU1hc2swMTAoKSwgbmV3IERhdGFNYXNrMDExKCksIG5ldyBEYXRhTWFzazEwMCgpLCBuZXcgRGF0YU1hc2sxMDEoKSwgbmV3IERhdGFNYXNrMTEwKCksIG5ldyBEYXRhTWFzazExMSgpKTsNCg0K"
ARCPhone.ClientFiles["/qr_decode/decoder.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQp2YXIgRGVjb2Rlcj17fTsNCkRlY29kZXIucnNEZWNvZGVyID0gbmV3IFJlZWRTb2xvbW9uRGVjb2RlcihHRjI1Ni5RUl9DT0RFX0ZJRUxEKTsNCg0KRGVjb2Rlci5jb3JyZWN0RXJyb3JzPWZ1bmN0aW9uKCBjb2Rld29yZEJ5dGVzLCAgbnVtRGF0YUNvZGV3b3JkcykNCnsNCgl2YXIgbnVtQ29kZXdvcmRzID0gY29kZXdvcmRCeXRlcy5sZW5ndGg7DQoJLy8gRmlyc3QgcmVhZCBpbnRvIGFuIGFycmF5IG9mIGludHMNCgl2YXIgY29kZXdvcmRzSW50cyA9IG5ldyBBcnJheShudW1Db2Rld29yZHMpOw0KCWZvciAodmFyIGkgPSAwOyBpIDwgbnVtQ29kZXdvcmRzOyBpKyspDQoJew0KCQljb2Rld29yZHNJbnRzW2ldID0gY29kZXdvcmRCeXRlc1tpXSAmIDB4RkY7DQoJfQ0KCXZhciBudW1FQ0NvZGV3b3JkcyA9IGNvZGV3b3JkQnl0ZXMubGVuZ3RoIC0gbnVtRGF0YUNvZGV3b3JkczsNCgl0cnkNCgl7DQoJCURlY29kZXIucnNEZWNvZGVyLmRlY29kZShjb2Rld29yZHNJbnRzLCBudW1FQ0NvZGV3b3Jkcyk7DQoJCS8vdmFyIGNvcnJlY3RvciA9IG5ldyBSZWVkU29sb21vbihjb2Rld29yZHNJbnRzLCBudW1FQ0NvZGV3b3Jkcyk7DQoJCS8vY29ycmVjdG9yLmNvcnJlY3QoKTsNCgl9DQoJY2F0Y2ggKCByc2UpDQoJew0KCQl0aHJvdyByc2U7DQoJfQ0KCS8vIENvcHkgYmFjayBpbnRvIGFycmF5IG9mIGJ5dGVzIC0tIG9ubHkgbmVlZCB0byB3b3JyeSBhYm91dCB0aGUgYnl0ZXMgdGhhdCB3ZXJlIGRhdGENCgkvLyBXZSBkb24ndCBjYXJlIGFib3V0IGVycm9ycyBpbiB0aGUgZXJyb3ItY29ycmVjdGlvbiBjb2Rld29yZHMNCglmb3IgKHZhciBpID0gMDsgaSA8IG51bURhdGFDb2Rld29yZHM7IGkrKykNCgl7DQoJCWNvZGV3b3JkQnl0ZXNbaV0gPSAgY29kZXdvcmRzSW50c1tpXTsNCgl9DQp9DQoNCkRlY29kZXIuZGVjb2RlPWZ1bmN0aW9uKGJpdHMpDQp7DQoJdmFyIHBhcnNlciA9IG5ldyBCaXRNYXRyaXhQYXJzZXIoYml0cyk7DQoJdmFyIHZlcnNpb24gPSBwYXJzZXIucmVhZFZlcnNpb24oKTsNCgl2YXIgZWNMZXZlbCA9IHBhcnNlci5yZWFkRm9ybWF0SW5mb3JtYXRpb24oKS5FcnJvckNvcnJlY3Rpb25MZXZlbDsNCgkNCgkvLyBSZWFkIGNvZGV3b3Jkcw0KCXZhciBjb2Rld29yZHMgPSBwYXJzZXIucmVhZENvZGV3b3JkcygpOw0KDQoJLy8gU2VwYXJhdGUgaW50byBkYXRhIGJsb2Nrcw0KCXZhciBkYXRhQmxvY2tzID0gRGF0YUJsb2NrLmdldERhdGFCbG9ja3MoY29kZXdvcmRzLCB2ZXJzaW9uLCBlY0xldmVsKTsNCgkNCgkvLyBDb3VudCB0b3RhbCBudW1iZXIgb2YgZGF0YSBieXRlcw0KCXZhciB0b3RhbEJ5dGVzID0gMDsNCglmb3IgKHZhciBpID0gMDsgaSA8IGRhdGFCbG9ja3MubGVuZ3RoOyBpKyspDQoJew0KCQl0b3RhbEJ5dGVzICs9IGRhdGFCbG9ja3NbaV0uTnVtRGF0YUNvZGV3b3JkczsNCgl9DQoJdmFyIHJlc3VsdEJ5dGVzID0gbmV3IEFycmF5KHRvdGFsQnl0ZXMpOw0KCXZhciByZXN1bHRPZmZzZXQgPSAwOw0KCQ0KCS8vIEVycm9yLWNvcnJlY3QgYW5kIGNvcHkgZGF0YSBibG9ja3MgdG9nZXRoZXIgaW50byBhIHN0cmVhbSBvZiBieXRlcw0KCWZvciAodmFyIGogPSAwOyBqIDwgZGF0YUJsb2Nrcy5sZW5ndGg7IGorKykNCgl7DQoJCXZhciBkYXRhQmxvY2sgPSBkYXRhQmxvY2tzW2pdOw0KCQl2YXIgY29kZXdvcmRCeXRlcyA9IGRhdGFCbG9jay5Db2Rld29yZHM7DQoJCXZhciBudW1EYXRhQ29kZXdvcmRzID0gZGF0YUJsb2NrLk51bURhdGFDb2Rld29yZHM7DQoJCURlY29kZXIuY29ycmVjdEVycm9ycyhjb2Rld29yZEJ5dGVzLCBudW1EYXRhQ29kZXdvcmRzKTsNCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBudW1EYXRhQ29kZXdvcmRzOyBpKyspDQoJCXsNCgkJCXJlc3VsdEJ5dGVzW3Jlc3VsdE9mZnNldCsrXSA9IGNvZGV3b3JkQnl0ZXNbaV07DQoJCX0NCgl9DQoJDQoJLy8gRGVjb2RlIHRoZSBjb250ZW50cyBvZiB0aGF0IHN0cmVhbSBvZiBieXRlcw0KCXZhciByZWFkZXIgPSBuZXcgUVJDb2RlRGF0YUJsb2NrUmVhZGVyKHJlc3VsdEJ5dGVzLCB2ZXJzaW9uLlZlcnNpb25OdW1iZXIsIGVjTGV2ZWwuQml0cyk7DQoJcmV0dXJuIHJlYWRlcjsNCgkvL3JldHVybiBEZWNvZGVkQml0U3RyZWFtUGFyc2VyLmRlY29kZShyZXN1bHRCeXRlcywgdmVyc2lvbiwgZWNMZXZlbCk7DQp9DQo="
ARCPhone.ClientFiles["/qr_decode/detector.js.txt"] = ""
ARCPhone.ClientFiles["/qr_decode/errorlevel.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQpmdW5jdGlvbiBFcnJvckNvcnJlY3Rpb25MZXZlbChvcmRpbmFsLCAgYml0cywgbmFtZSkNCnsNCgl0aGlzLm9yZGluYWxfUmVuYW1lZF9GaWVsZCA9IG9yZGluYWw7DQoJdGhpcy5iaXRzID0gYml0czsNCgl0aGlzLm5hbWUgPSBuYW1lOw0KCXRoaXMuX19kZWZpbmVHZXR0ZXJfXygiQml0cyIsIGZ1bmN0aW9uKCkNCgl7DQoJCXJldHVybiB0aGlzLmJpdHM7DQoJfSk7DQoJdGhpcy5fX2RlZmluZUdldHRlcl9fKCJOYW1lIiwgZnVuY3Rpb24oKQ0KCXsNCgkJcmV0dXJuIHRoaXMubmFtZTsNCgl9KTsNCgl0aGlzLm9yZGluYWw9ZnVuY3Rpb24oKQ0KCXsNCgkJcmV0dXJuIHRoaXMub3JkaW5hbF9SZW5hbWVkX0ZpZWxkOw0KCX0NCn0NCg0KRXJyb3JDb3JyZWN0aW9uTGV2ZWwuZm9yQml0cz1mdW5jdGlvbiggYml0cykNCnsNCglpZiAoYml0cyA8IDAgfHwgYml0cyA+PSBGT1JfQklUUy5sZW5ndGgpDQoJew0KCQl0aHJvdyAiQXJndW1lbnRFeGNlcHRpb24iOw0KCX0NCglyZXR1cm4gRk9SX0JJVFNbYml0c107DQp9DQoNCnZhciBMID0gbmV3IEVycm9yQ29ycmVjdGlvbkxldmVsKDAsIDB4MDEsICJMIik7DQp2YXIgTSA9IG5ldyBFcnJvckNvcnJlY3Rpb25MZXZlbCgxLCAweDAwLCAiTSIpOw0KdmFyIFEgPSBuZXcgRXJyb3JDb3JyZWN0aW9uTGV2ZWwoMiwgMHgwMywgIlEiKTsNCnZhciBIID0gbmV3IEVycm9yQ29ycmVjdGlvbkxldmVsKDMsIDB4MDIsICJIIik7DQp2YXIgRk9SX0JJVFMgPSBuZXcgQXJyYXkoIE0sIEwsIEgsIFEpOw=="
ARCPhone.ClientFiles["/qr_decode/findpat.js.txt"] = ""
ARCPhone.ClientFiles["/qr_decode/formatinf.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQp2YXIgRk9STUFUX0lORk9fTUFTS19RUiA9IDB4NTQxMjsNCnZhciBGT1JNQVRfSU5GT19ERUNPREVfTE9PS1VQID0gbmV3IEFycmF5KG5ldyBBcnJheSgweDU0MTIsIDB4MDApLCBuZXcgQXJyYXkoMHg1MTI1LCAweDAxKSwgbmV3IEFycmF5KDB4NUU3QywgMHgwMiksIG5ldyBBcnJheSgweDVCNEIsIDB4MDMpLCBuZXcgQXJyYXkoMHg0NUY5LCAweDA0KSwgbmV3IEFycmF5KDB4NDBDRSwgMHgwNSksIG5ldyBBcnJheSgweDRGOTcsIDB4MDYpLCBuZXcgQXJyYXkoMHg0QUEwLCAweDA3KSwgbmV3IEFycmF5KDB4NzdDNCwgMHgwOCksIG5ldyBBcnJheSgweDcyRjMsIDB4MDkpLCBuZXcgQXJyYXkoMHg3REFBLCAweDBBKSwgbmV3IEFycmF5KDB4Nzg5RCwgMHgwQiksIG5ldyBBcnJheSgweDY2MkYsIDB4MEMpLCBuZXcgQXJyYXkoMHg2MzE4LCAweDBEKSwgbmV3IEFycmF5KDB4NkM0MSwgMHgwRSksIG5ldyBBcnJheSgweDY5NzYsIDB4MEYpLCBuZXcgQXJyYXkoMHgxNjg5LCAweDEwKSwgbmV3IEFycmF5KDB4MTNCRSwgMHgxMSksIG5ldyBBcnJheSgweDFDRTcsIDB4MTIpLCBuZXcgQXJyYXkoMHgxOUQwLCAweDEzKSwgbmV3IEFycmF5KDB4MDc2MiwgMHgxNCksIG5ldyBBcnJheSgweDAyNTUsIDB4MTUpLCBuZXcgQXJyYXkoMHgwRDBDLCAweDE2KSwgbmV3IEFycmF5KDB4MDgzQiwgMHgxNyksIG5ldyBBcnJheSgweDM1NUYsIDB4MTgpLCBuZXcgQXJyYXkoMHgzMDY4LCAweDE5KSwgbmV3IEFycmF5KDB4M0YzMSwgMHgxQSksIG5ldyBBcnJheSgweDNBMDYsIDB4MUIpLCBuZXcgQXJyYXkoMHgyNEI0LCAweDFDKSwgbmV3IEFycmF5KDB4MjE4MywgMHgxRCksIG5ldyBBcnJheSgweDJFREEsIDB4MUUpLCBuZXcgQXJyYXkoMHgyQkVELCAweDFGKSk7DQp2YXIgQklUU19TRVRfSU5fSEFMRl9CWVRFID0gbmV3IEFycmF5KDAsIDEsIDEsIDIsIDEsIDIsIDIsIDMsIDEsIDIsIDIsIDMsIDIsIDMsIDMsIDQpOw0KDQoNCmZ1bmN0aW9uIEZvcm1hdEluZm9ybWF0aW9uKGZvcm1hdEluZm8pDQp7DQoJdGhpcy5lcnJvckNvcnJlY3Rpb25MZXZlbCA9IEVycm9yQ29ycmVjdGlvbkxldmVsLmZvckJpdHMoKGZvcm1hdEluZm8gPj4gMykgJiAweDAzKTsNCgl0aGlzLmRhdGFNYXNrID0gIChmb3JtYXRJbmZvICYgMHgwNyk7DQoNCgl0aGlzLl9fZGVmaW5lR2V0dGVyX18oIkVycm9yQ29ycmVjdGlvbkxldmVsIiwgZnVuY3Rpb24oKQ0KCXsNCgkJcmV0dXJuIHRoaXMuZXJyb3JDb3JyZWN0aW9uTGV2ZWw7DQoJfSk7DQoJdGhpcy5fX2RlZmluZUdldHRlcl9fKCJEYXRhTWFzayIsIGZ1bmN0aW9uKCkNCgl7DQoJCXJldHVybiB0aGlzLmRhdGFNYXNrOw0KCX0pOw0KCXRoaXMuR2V0SGFzaENvZGU9ZnVuY3Rpb24oKQ0KCXsNCgkJcmV0dXJuICh0aGlzLmVycm9yQ29ycmVjdGlvbkxldmVsLm9yZGluYWwoKSA8PCAzKSB8ICB0aGlzLmRhdGFNYXNrOw0KCX0NCgl0aGlzLkVxdWFscz1mdW5jdGlvbiggbykNCgl7DQoJCXZhciBvdGhlciA9ICBvOw0KCQlyZXR1cm4gdGhpcy5lcnJvckNvcnJlY3Rpb25MZXZlbCA9PSBvdGhlci5lcnJvckNvcnJlY3Rpb25MZXZlbCAmJiB0aGlzLmRhdGFNYXNrID09IG90aGVyLmRhdGFNYXNrOw0KCX0NCn0NCg0KRm9ybWF0SW5mb3JtYXRpb24ubnVtQml0c0RpZmZlcmluZz1mdW5jdGlvbiggYSwgIGIpDQp7DQoJYSBePSBiOyAvLyBhIG5vdyBoYXMgYSAxIGJpdCBleGFjdGx5IHdoZXJlIGl0cyBiaXQgZGlmZmVycyB3aXRoIGIncw0KCS8vIENvdW50IGJpdHMgc2V0IHF1aWNrbHkgd2l0aCBhIHNlcmllcyBvZiBsb29rdXBzOg0KCXJldHVybiBCSVRTX1NFVF9JTl9IQUxGX0JZVEVbYSAmIDB4MEZdICsgQklUU19TRVRfSU5fSEFMRl9CWVRFWyhVUlNoaWZ0KGEsIDQpICYgMHgwRildICsgQklUU19TRVRfSU5fSEFMRl9CWVRFWyhVUlNoaWZ0KGEsIDgpICYgMHgwRildICsgQklUU19TRVRfSU5fSEFMRl9CWVRFWyhVUlNoaWZ0KGEsIDEyKSAmIDB4MEYpXSArIEJJVFNfU0VUX0lOX0hBTEZfQllURVsoVVJTaGlmdChhLCAxNikgJiAweDBGKV0gKyBCSVRTX1NFVF9JTl9IQUxGX0JZVEVbKFVSU2hpZnQoYSwgMjApICYgMHgwRildICsgQklUU19TRVRfSU5fSEFMRl9CWVRFWyhVUlNoaWZ0KGEsIDI0KSAmIDB4MEYpXSArIEJJVFNfU0VUX0lOX0hBTEZfQllURVsoVVJTaGlmdChhLCAyOCkgJiAweDBGKV07DQp9DQoNCkZvcm1hdEluZm9ybWF0aW9uLmRlY29kZUZvcm1hdEluZm9ybWF0aW9uPWZ1bmN0aW9uKCBtYXNrZWRGb3JtYXRJbmZvKQ0Kew0KCXZhciBmb3JtYXRJbmZvID0gRm9ybWF0SW5mb3JtYXRpb24uZG9EZWNvZGVGb3JtYXRJbmZvcm1hdGlvbihtYXNrZWRGb3JtYXRJbmZvKTsNCglpZiAoZm9ybWF0SW5mbyAhPSBudWxsKQ0KCXsNCgkJcmV0dXJuIGZvcm1hdEluZm87DQoJfQ0KCS8vIFNob3VsZCByZXR1cm4gbnVsbCwgYnV0LCBzb21lIFFSIGNvZGVzIGFwcGFyZW50bHkNCgkvLyBkbyBub3QgbWFzayB0aGlzIGluZm8uIFRyeSBhZ2FpbiBieSBhY3R1YWxseSBtYXNraW5nIHRoZSBwYXR0ZXJuDQoJLy8gZmlyc3QNCglyZXR1cm4gRm9ybWF0SW5mb3JtYXRpb24uZG9EZWNvZGVGb3JtYXRJbmZvcm1hdGlvbihtYXNrZWRGb3JtYXRJbmZvIF4gRk9STUFUX0lORk9fTUFTS19RUik7DQp9DQpGb3JtYXRJbmZvcm1hdGlvbi5kb0RlY29kZUZvcm1hdEluZm9ybWF0aW9uPWZ1bmN0aW9uKCBtYXNrZWRGb3JtYXRJbmZvKQ0Kew0KCS8vIEZpbmQgdGhlIGludCBpbiBGT1JNQVRfSU5GT19ERUNPREVfTE9PS1VQIHdpdGggZmV3ZXN0IGJpdHMgZGlmZmVyaW5nDQoJdmFyIGJlc3REaWZmZXJlbmNlID0gMHhmZmZmZmZmZjsNCgl2YXIgYmVzdEZvcm1hdEluZm8gPSAwOw0KCWZvciAodmFyIGkgPSAwOyBpIDwgRk9STUFUX0lORk9fREVDT0RFX0xPT0tVUC5sZW5ndGg7IGkrKykNCgl7DQoJCXZhciBkZWNvZGVJbmZvID0gRk9STUFUX0lORk9fREVDT0RFX0xPT0tVUFtpXTsNCgkJdmFyIHRhcmdldEluZm8gPSBkZWNvZGVJbmZvWzBdOw0KCQlpZiAodGFyZ2V0SW5mbyA9PSBtYXNrZWRGb3JtYXRJbmZvKQ0KCQl7DQoJCQkvLyBGb3VuZCBhbiBleGFjdCBtYXRjaA0KCQkJcmV0dXJuIG5ldyBGb3JtYXRJbmZvcm1hdGlvbihkZWNvZGVJbmZvWzFdKTsNCgkJfQ0KCQl2YXIgYml0c0RpZmZlcmVuY2UgPSB0aGlzLm51bUJpdHNEaWZmZXJpbmcobWFza2VkRm9ybWF0SW5mbywgdGFyZ2V0SW5mbyk7DQoJCWlmIChiaXRzRGlmZmVyZW5jZSA8IGJlc3REaWZmZXJlbmNlKQ0KCQl7DQoJCQliZXN0Rm9ybWF0SW5mbyA9IGRlY29kZUluZm9bMV07DQoJCQliZXN0RGlmZmVyZW5jZSA9IGJpdHNEaWZmZXJlbmNlOw0KCQl9DQoJfQ0KCS8vIEhhbW1pbmcgZGlzdGFuY2Ugb2YgdGhlIDMyIG1hc2tlZCBjb2RlcyBpcyA3LCBieSBjb25zdHJ1Y3Rpb24sIHNvIDw9IDMgYml0cw0KCS8vIGRpZmZlcmluZyBtZWFucyB3ZSBmb3VuZCBhIG1hdGNoDQoJaWYgKGJlc3REaWZmZXJlbmNlIDw9IDMpDQoJew0KCQlyZXR1cm4gbmV3IEZvcm1hdEluZm9ybWF0aW9uKGJlc3RGb3JtYXRJbmZvKTsNCgl9DQoJcmV0dXJuIG51bGw7DQp9DQoNCgkJ"
ARCPhone.ClientFiles["/qr_decode/gf256.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQpmdW5jdGlvbiBHRjI1NiggcHJpbWl0aXZlKQ0Kew0KCXRoaXMuZXhwVGFibGUgPSBuZXcgQXJyYXkoMjU2KTsNCgl0aGlzLmxvZ1RhYmxlID0gbmV3IEFycmF5KDI1Nik7DQoJdmFyIHggPSAxOw0KCWZvciAodmFyIGkgPSAwOyBpIDwgMjU2OyBpKyspDQoJew0KCQl0aGlzLmV4cFRhYmxlW2ldID0geDsNCgkJeCA8PD0gMTsgLy8geCA9IHggKiAyOyB3ZSdyZSBhc3N1bWluZyB0aGUgZ2VuZXJhdG9yIGFscGhhIGlzIDINCgkJaWYgKHggPj0gMHgxMDApDQoJCXsNCgkJCXggXj0gcHJpbWl0aXZlOw0KCQl9DQoJfQ0KCWZvciAodmFyIGkgPSAwOyBpIDwgMjU1OyBpKyspDQoJew0KCQl0aGlzLmxvZ1RhYmxlW3RoaXMuZXhwVGFibGVbaV1dID0gaTsNCgl9DQoJLy8gbG9nVGFibGVbMF0gPT0gMCBidXQgdGhpcyBzaG91bGQgbmV2ZXIgYmUgdXNlZA0KCXZhciBhdDA9bmV3IEFycmF5KDEpO2F0MFswXT0wOw0KCXRoaXMuemVybyA9IG5ldyBHRjI1NlBvbHkodGhpcywgbmV3IEFycmF5KGF0MCkpOw0KCXZhciBhdDE9bmV3IEFycmF5KDEpO2F0MVswXT0xOw0KCXRoaXMub25lID0gbmV3IEdGMjU2UG9seSh0aGlzLCBuZXcgQXJyYXkoYXQxKSk7DQoJDQoJdGhpcy5fX2RlZmluZUdldHRlcl9fKCJaZXJvIiwgZnVuY3Rpb24oKQ0KCXsNCgkJcmV0dXJuIHRoaXMuemVybzsNCgl9KTsNCgl0aGlzLl9fZGVmaW5lR2V0dGVyX18oIk9uZSIsIGZ1bmN0aW9uKCkNCgl7DQoJCXJldHVybiB0aGlzLm9uZTsNCgl9KTsNCgl0aGlzLmJ1aWxkTW9ub21pYWw9ZnVuY3Rpb24oIGRlZ3JlZSwgIGNvZWZmaWNpZW50KQ0KCQl7DQoJCQlpZiAoZGVncmVlIDwgMCkNCgkJCXsNCgkJCQl0aHJvdyAiU3lzdGVtLkFyZ3VtZW50RXhjZXB0aW9uIjsNCgkJCX0NCgkJCWlmIChjb2VmZmljaWVudCA9PSAwKQ0KCQkJew0KCQkJCXJldHVybiB0aGlzLnplcm87DQoJCQl9DQoJCQl2YXIgY29lZmZpY2llbnRzID0gbmV3IEFycmF5KGRlZ3JlZSArIDEpOw0KCQkJZm9yKHZhciBpPTA7aTxjb2VmZmljaWVudHMubGVuZ3RoO2krKyljb2VmZmljaWVudHNbaV09MDsNCgkJCWNvZWZmaWNpZW50c1swXSA9IGNvZWZmaWNpZW50Ow0KCQkJcmV0dXJuIG5ldyBHRjI1NlBvbHkodGhpcywgY29lZmZpY2llbnRzKTsNCgkJfQ0KCXRoaXMuZXhwPWZ1bmN0aW9uKCBhKQ0KCQl7DQoJCQlyZXR1cm4gdGhpcy5leHBUYWJsZVthXTsNCgkJfQ0KCXRoaXMubG9nPWZ1bmN0aW9uKCBhKQ0KCQl7DQoJCQlpZiAoYSA9PSAwKQ0KCQkJew0KCQkJCXRocm93ICJTeXN0ZW0uQXJndW1lbnRFeGNlcHRpb24iOw0KCQkJfQ0KCQkJcmV0dXJuIHRoaXMubG9nVGFibGVbYV07DQoJCX0NCgl0aGlzLmludmVyc2U9ZnVuY3Rpb24oIGEpDQoJCXsNCgkJCWlmIChhID09IDApDQoJCQl7DQoJCQkJdGhyb3cgIlN5c3RlbS5Bcml0aG1ldGljRXhjZXB0aW9uIjsNCgkJCX0NCgkJCXJldHVybiB0aGlzLmV4cFRhYmxlWzI1NSAtIHRoaXMubG9nVGFibGVbYV1dOw0KCQl9DQoJdGhpcy5tdWx0aXBseT1mdW5jdGlvbiggYSwgIGIpDQoJCXsNCgkJCWlmIChhID09IDAgfHwgYiA9PSAwKQ0KCQkJew0KCQkJCXJldHVybiAwOw0KCQkJfQ0KCQkJaWYgKGEgPT0gMSkNCgkJCXsNCgkJCQlyZXR1cm4gYjsNCgkJCX0NCgkJCWlmIChiID09IDEpDQoJCQl7DQoJCQkJcmV0dXJuIGE7DQoJCQl9DQoJCQlyZXR1cm4gdGhpcy5leHBUYWJsZVsodGhpcy5sb2dUYWJsZVthXSArIHRoaXMubG9nVGFibGVbYl0pICUgMjU1XTsNCgkJfQkJDQp9DQoNCkdGMjU2LlFSX0NPREVfRklFTEQgPSBuZXcgR0YyNTYoMHgwMTFEKTsNCkdGMjU2LkRBVEFfTUFUUklYX0ZJRUxEID0gbmV3IEdGMjU2KDB4MDEyRCk7DQoNCkdGMjU2LmFkZE9yU3VidHJhY3Q9ZnVuY3Rpb24oIGEsICBiKQ0Kew0KCXJldHVybiBhIF4gYjsNCn0="
ARCPhone.ClientFiles["/qr_decode/gf256poly.js.txt"] = ""
ARCPhone.ClientFiles["/qr_decode/grid.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQp2YXIgR3JpZFNhbXBsZXIgPSB7fTsNCg0KR3JpZFNhbXBsZXIuY2hlY2tBbmROdWRnZVBvaW50cz1mdW5jdGlvbiggaW1hZ2UsICBwb2ludHMpDQoJCXsNCgkJCXZhciB3aWR0aCA9IHFyY29kZS53aWR0aDsNCgkJCXZhciBoZWlnaHQgPSBxcmNvZGUuaGVpZ2h0Ow0KCQkJLy8gQ2hlY2sgYW5kIG51ZGdlIHBvaW50cyBmcm9tIHN0YXJ0IHVudGlsIHdlIHNlZSBzb21lIHRoYXQgYXJlIE9LOg0KCQkJdmFyIG51ZGdlZCA9IHRydWU7DQoJCQlmb3IgKHZhciBvZmZzZXQgPSAwOyBvZmZzZXQgPCBwb2ludHMubGVuZ3RoICYmIG51ZGdlZDsgb2Zmc2V0ICs9IDIpDQoJCQl7DQoJCQkJdmFyIHggPSBNYXRoLmZsb29yIChwb2ludHNbb2Zmc2V0XSk7DQoJCQkJdmFyIHkgPSBNYXRoLmZsb29yKCBwb2ludHNbb2Zmc2V0ICsgMV0pOw0KCQkJCWlmICh4IDwgLSAxIHx8IHggPiB3aWR0aCB8fCB5IDwgLSAxIHx8IHkgPiBoZWlnaHQpDQoJCQkJew0KCQkJCQl0aHJvdyAiRXJyb3IuY2hlY2tBbmROdWRnZVBvaW50cyAiOw0KCQkJCX0NCgkJCQludWRnZWQgPSBmYWxzZTsNCgkJCQlpZiAoeCA9PSAtIDEpDQoJCQkJew0KCQkJCQlwb2ludHNbb2Zmc2V0XSA9IDAuMDsNCgkJCQkJbnVkZ2VkID0gdHJ1ZTsNCgkJCQl9DQoJCQkJZWxzZSBpZiAoeCA9PSB3aWR0aCkNCgkJCQl7DQoJCQkJCXBvaW50c1tvZmZzZXRdID0gd2lkdGggLSAxOw0KCQkJCQludWRnZWQgPSB0cnVlOw0KCQkJCX0NCgkJCQlpZiAoeSA9PSAtIDEpDQoJCQkJew0KCQkJCQlwb2ludHNbb2Zmc2V0ICsgMV0gPSAwLjA7DQoJCQkJCW51ZGdlZCA9IHRydWU7DQoJCQkJfQ0KCQkJCWVsc2UgaWYgKHkgPT0gaGVpZ2h0KQ0KCQkJCXsNCgkJCQkJcG9pbnRzW29mZnNldCArIDFdID0gaGVpZ2h0IC0gMTsNCgkJCQkJbnVkZ2VkID0gdHJ1ZTsNCgkJCQl9DQoJCQl9DQoJCQkvLyBDaGVjayBhbmQgbnVkZ2UgcG9pbnRzIGZyb20gZW5kOg0KCQkJbnVkZ2VkID0gdHJ1ZTsNCgkJCWZvciAodmFyIG9mZnNldCA9IHBvaW50cy5sZW5ndGggLSAyOyBvZmZzZXQgPj0gMCAmJiBudWRnZWQ7IG9mZnNldCAtPSAyKQ0KCQkJew0KCQkJCXZhciB4ID0gTWF0aC5mbG9vciggcG9pbnRzW29mZnNldF0pOw0KCQkJCXZhciB5ID0gTWF0aC5mbG9vciggcG9pbnRzW29mZnNldCArIDFdKTsNCgkJCQlpZiAoeCA8IC0gMSB8fCB4ID4gd2lkdGggfHwgeSA8IC0gMSB8fCB5ID4gaGVpZ2h0KQ0KCQkJCXsNCgkJCQkJdGhyb3cgIkVycm9yLmNoZWNrQW5kTnVkZ2VQb2ludHMgIjsNCgkJCQl9DQoJCQkJbnVkZ2VkID0gZmFsc2U7DQoJCQkJaWYgKHggPT0gLSAxKQ0KCQkJCXsNCgkJCQkJcG9pbnRzW29mZnNldF0gPSAwLjA7DQoJCQkJCW51ZGdlZCA9IHRydWU7DQoJCQkJfQ0KCQkJCWVsc2UgaWYgKHggPT0gd2lkdGgpDQoJCQkJew0KCQkJCQlwb2ludHNbb2Zmc2V0XSA9IHdpZHRoIC0gMTsNCgkJCQkJbnVkZ2VkID0gdHJ1ZTsNCgkJCQl9DQoJCQkJaWYgKHkgPT0gLSAxKQ0KCQkJCXsNCgkJCQkJcG9pbnRzW29mZnNldCArIDFdID0gMC4wOw0KCQkJCQludWRnZWQgPSB0cnVlOw0KCQkJCX0NCgkJCQllbHNlIGlmICh5ID09IGhlaWdodCkNCgkJCQl7DQoJCQkJCXBvaW50c1tvZmZzZXQgKyAxXSA9IGhlaWdodCAtIDE7DQoJCQkJCW51ZGdlZCA9IHRydWU7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJDQoNCg0KR3JpZFNhbXBsZXIuc2FtcGxlR3JpZDM9ZnVuY3Rpb24oIGltYWdlLCAgZGltZW5zaW9uLCAgdHJhbnNmb3JtKQ0KCQl7DQoJCQl2YXIgYml0cyA9IG5ldyBCaXRNYXRyaXgoZGltZW5zaW9uKTsNCgkJCXZhciBwb2ludHMgPSBuZXcgQXJyYXkoZGltZW5zaW9uIDw8IDEpOw0KCQkJZm9yICh2YXIgeSA9IDA7IHkgPCBkaW1lbnNpb247IHkrKykNCgkJCXsNCgkJCQl2YXIgbWF4ID0gcG9pbnRzLmxlbmd0aDsNCgkJCQl2YXIgaVZhbHVlID0gIHkgKyAwLjU7DQoJCQkJZm9yICh2YXIgeCA9IDA7IHggPCBtYXg7IHggKz0gMikNCgkJCQl7DQoJCQkJCXBvaW50c1t4XSA9ICAoeCA+PiAxKSArIDAuNTsNCgkJCQkJcG9pbnRzW3ggKyAxXSA9IGlWYWx1ZTsNCgkJCQl9DQoJCQkJdHJhbnNmb3JtLnRyYW5zZm9ybVBvaW50czEocG9pbnRzKTsNCgkJCQkvLyBRdWljayBjaGVjayB0byBzZWUgaWYgcG9pbnRzIHRyYW5zZm9ybWVkIHRvIHNvbWV0aGluZyBpbnNpZGUgdGhlIGltYWdlOw0KCQkJCS8vIHN1ZmZpY2llbnQgdG8gY2hlY2sgdGhlIGVuZHBvaW50cw0KCQkJCUdyaWRTYW1wbGVyLmNoZWNrQW5kTnVkZ2VQb2ludHMoaW1hZ2UsIHBvaW50cyk7DQoJCQkJdHJ5DQoJCQkJew0KCQkJCQlmb3IgKHZhciB4ID0gMDsgeCA8IG1heDsgeCArPSAyKQ0KCQkJCQl7DQoJCQkJCQkvL3ZhciB4cG9pbnQgPSAoTWF0aC5mbG9vciggcG9pbnRzW3hdKSAqIDQpICsgKE1hdGguZmxvb3IoIHBvaW50c1t4ICsgMV0pICogcXJjb2RlLndpZHRoICogNCk7DQogICAgICAgICAgICAgICAgICAgICAgICB2YXIgYml0ID0gaW1hZ2VbTWF0aC5mbG9vciggcG9pbnRzW3hdKSsgcXJjb2RlLndpZHRoKiBNYXRoLmZsb29yKCBwb2ludHNbeCArIDFdKV07DQoJCQkJCQkvL3FyY29kZS5pbWFnZWRhdGEuZGF0YVt4cG9pbnRdID0gYml0PzI1NTowOw0KCQkJCQkJLy9xcmNvZGUuaW1hZ2VkYXRhLmRhdGFbeHBvaW50KzFdID0gYml0PzI1NTowOw0KCQkJCQkJLy9xcmNvZGUuaW1hZ2VkYXRhLmRhdGFbeHBvaW50KzJdID0gMDsNCgkJCQkJCS8vcXJjb2RlLmltYWdlZGF0YS5kYXRhW3hwb2ludCszXSA9IDI1NTsNCgkJCQkJCS8vYml0c1t4ID4+IDFdWyB5XT1iaXQ7DQoJCQkJCQlpZihiaXQpDQoJCQkJCQkJYml0cy5zZXRfUmVuYW1lZCh4ID4+IDEsIHkpOw0KCQkJCQl9DQoJCQkJfQ0KCQkJCWNhdGNoICggYWlvb2JlKQ0KCQkJCXsNCgkJCQkJLy8gVGhpcyBmZWVscyB3cm9uZywgYnV0LCBzb21ldGltZXMgaWYgdGhlIGZpbmRlciBwYXR0ZXJucyBhcmUgbWlzaWRlbnRpZmllZCwgdGhlIHJlc3VsdGluZw0KCQkJCQkvLyB0cmFuc2Zvcm0gZ2V0cyAidHdpc3RlZCIgc3VjaCB0aGF0IGl0IG1hcHMgYSBzdHJhaWdodCBsaW5lIG9mIHBvaW50cyB0byBhIHNldCBvZiBwb2ludHMNCgkJCQkJLy8gd2hvc2UgZW5kcG9pbnRzIGFyZSBpbiBib3VuZHMsIGJ1dCBvdGhlcnMgYXJlIG5vdC4gVGhlcmUgaXMgcHJvYmFibHkgc29tZSBtYXRoZW1hdGljYWwNCgkJCQkJLy8gd2F5IHRvIGRldGVjdCB0aGlzIGFib3V0IHRoZSB0cmFuc2Zvcm1hdGlvbiB0aGF0IEkgZG9uJ3Qga25vdyB5ZXQuDQoJCQkJCS8vIFRoaXMgcmVzdWx0cyBpbiBhbiB1Z2x5IHJ1bnRpbWUgZXhjZXB0aW9uIGRlc3BpdGUgb3VyIGNsZXZlciBjaGVja3MgYWJvdmUgLS0gY2FuJ3QgaGF2ZQ0KCQkJCQkvLyB0aGF0LiBXZSBjb3VsZCBjaGVjayBlYWNoIHBvaW50J3MgY29vcmRpbmF0ZXMgYnV0IHRoYXQgZmVlbHMgZHVwbGljYXRpdmUuIFdlIHNldHRsZSBmb3INCgkJCQkJLy8gY2F0Y2hpbmcgYW5kIHdyYXBwaW5nIEFycmF5SW5kZXhPdXRPZkJvdW5kc0V4Y2VwdGlvbi4NCgkJCQkJdGhyb3cgIkVycm9yLmNoZWNrQW5kTnVkZ2VQb2ludHMiOw0KCQkJCX0NCgkJCX0NCgkJCXJldHVybiBiaXRzOw0KCQl9DQoNCkdyaWRTYW1wbGVyLnNhbXBsZUdyaWR4PWZ1bmN0aW9uKCBpbWFnZSwgIGRpbWVuc2lvbiwgIHAxVG9YLCAgcDFUb1ksICBwMlRvWCwgIHAyVG9ZLCAgcDNUb1gsICBwM1RvWSwgIHA0VG9YLCAgcDRUb1ksICBwMUZyb21YLCAgcDFGcm9tWSwgIHAyRnJvbVgsICBwMkZyb21ZLCAgcDNGcm9tWCwgIHAzRnJvbVksICBwNEZyb21YLCAgcDRGcm9tWSkNCnsNCgl2YXIgdHJhbnNmb3JtID0gUGVyc3BlY3RpdmVUcmFuc2Zvcm0ucXVhZHJpbGF0ZXJhbFRvUXVhZHJpbGF0ZXJhbChwMVRvWCwgcDFUb1ksIHAyVG9YLCBwMlRvWSwgcDNUb1gsIHAzVG9ZLCBwNFRvWCwgcDRUb1ksIHAxRnJvbVgsIHAxRnJvbVksIHAyRnJvbVgsIHAyRnJvbVksIHAzRnJvbVgsIHAzRnJvbVksIHA0RnJvbVgsIHA0RnJvbVkpOw0KCQkJDQoJcmV0dXJuIEdyaWRTYW1wbGVyLnNhbXBsZUdyaWQzKGltYWdlLCBkaW1lbnNpb24sIHRyYW5zZm9ybSk7DQp9"
ARCPhone.ClientFiles["/qr_decode/index.html.txt"] = "PCFkb2N0eXBlIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQoJPGhlYWQ+DQoJCTxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4NCgkJPHRpdGxlPlFSRGVjb2RlPC90aXRsZT4NCgk8L2hlYWQ+DQoJDQoJPGJvZHk+DQoJCTxoMT5ET04nVCBNSU5EIE1FIEknTSBKVVNUIERFQ09ESU5HIFlPVVIgUVJDT0RFPC9oMT4NCgkJPHAgaWQ9ImRlY29kZXR4dCI+Li4uPC9wPg0KCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJncmlkLmpzLnR4dCI+PC9zY3JpcHQ+DQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9InZlcnNpb24uanMudHh0Ij48L3NjcmlwdD4NCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iZGV0ZWN0b3IuanMudHh0Ij48L3NjcmlwdD4NCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iZm9ybWF0aW5mLmpzLnR4dCI+PC9zY3JpcHQ+DQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImVycm9ybGV2ZWwuanMudHh0Ij48L3NjcmlwdD4NCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iYml0bWF0LmpzLnR4dCI+PC9zY3JpcHQ+DQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImRhdGFibG9jay5qcy50eHQiPjwvc2NyaXB0Pg0KCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJibXBhcnNlci5qcy50eHQiPjwvc2NyaXB0Pg0KCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJkYXRhbWFzay5qcy50eHQiPjwvc2NyaXB0Pg0KCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJyc2RlY29kZXIuanMudHh0Ij48L3NjcmlwdD4NCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iZ2YyNTZwb2x5LmpzLnR4dCI+PC9zY3JpcHQ+DQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImdmMjU2LmpzLnR4dCI+PC9zY3JpcHQ+DQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImRlY29kZXIuanMudHh0Ij48L3NjcmlwdD4NCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0icXJjb2RlLmpzLnR4dCI+PC9zY3JpcHQ+DQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImZpbmRwYXQuanMudHh0Ij48L3NjcmlwdD4NCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iYWxpZ25wYXQuanMudHh0Ij48L3NjcmlwdD4NCgkJPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iZGF0YWJyLmpzLnR4dCI+PC9zY3JpcHQ+DQoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4NCgkJCQ0KCQkJdmFyIHN0YXJ0ID0gZnVuY3Rpb24oKXsNCgkJCQlpZihjb25zb2xlLmx1YWRlY29kZSA9PSBudWxsKXsNCgkJCQkJc2V0VGltZW91dChzdGFydCwgMTAwKTsNCgkJCQkJcmV0dXJuOw0KCQkJCX0NCgkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVjb2RldHh0JykuaW5uZXJIVE1MID0gInVuZGVmaW5lZCI7DQoJCQkJcXJjb2RlLmNhbGxiYWNrID0gZnVuY3Rpb24oZGF0YSl7DQoJCQkJCWlmIChkYXRhIGluc3RhbmNlb2YgRXJyb3IpeyAvLyBJIGtub3cgdGhpcyBpc24ndCB0aGUgcHJvcGVyIHdheSB0byBkbyBpdCwgYnV0IEkgZGlkbid0IHdhbnQgdG8gbWVzcyB3aXRoIHRoZSBsaWJyYXJ5IHRvbyBtdWNoDQoJCQkJCQlkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVjb2RldHh0JykuaW5uZXJIVE1MID0gIkVycm9yICIgKyBkYXRhLm1lc3NhZ2U7DQoJCQkJCQljb25zb2xlLmx1YWRlY29kZShkYXRhLm1lc3NhZ2UpOw0KCQkJCQl9ZWxzZXsNCgkJCQkJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkZWNvZGV0eHQnKS5pbm5lckhUTUwgPSBkYXRhOw0KCQkJCQkJY29uc29sZS5sdWFkZWNvZGUobnVsbCxkYXRhKTsNCgkJCQkJfQ0KCQkJCX07DQoJCQkJY29uc29sZS5sdWFyZWFkeSgpOw0KCQkJfQ0KCQkJc3RhcnQoKQ0KCQkJdmFyIGRlYyA9IGZ1bmN0aW9uKHN0cil7DQoJCQkJY29uc29sZS5sb2coc3RyKTsNCgkJCQlxcmNvZGUuZGVjb2RlKHN0cik7DQoJCQl9DQoJCTwvc2NyaXB0Pg0KCTwvYm9keT4NCjwvaHRtbD4="
ARCPhone.ClientFiles["/qr_decode/qrcode.js.txt"] = ""
ARCPhone.ClientFiles["/qr_decode/rsdecoder.js.txt"] = "LyoNCiAgUG9ydGVkIHRvIEphdmFTY3JpcHQgYnkgTGF6YXIgTGFzemxvIDIwMTEgDQogIA0KICBsYXphcnNvZnRAZ21haWwuY29tLCB3d3cubGF6YXJzb2Z0LmluZm8NCiAgDQoqLw0KDQovKg0KKg0KKiBDb3B5cmlnaHQgMjAwNyBaWGluZyBhdXRob3JzDQoqDQoqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSAiTGljZW5zZSIpOw0KKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuDQoqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdA0KKg0KKiAgICAgIGh0dHA6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMA0KKg0KKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlDQoqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuICJBUyBJUyIgQkFTSVMsDQoqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLg0KKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kDQoqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLg0KKi8NCg0KDQpmdW5jdGlvbiBSZWVkU29sb21vbkRlY29kZXIoZmllbGQpDQp7DQoJdGhpcy5maWVsZCA9IGZpZWxkOw0KCXRoaXMuZGVjb2RlPWZ1bmN0aW9uKHJlY2VpdmVkLCAgdHdvUykNCgl7DQoJCQl2YXIgcG9seSA9IG5ldyBHRjI1NlBvbHkodGhpcy5maWVsZCwgcmVjZWl2ZWQpOw0KCQkJdmFyIHN5bmRyb21lQ29lZmZpY2llbnRzID0gbmV3IEFycmF5KHR3b1MpOw0KCQkJZm9yKHZhciBpPTA7aTxzeW5kcm9tZUNvZWZmaWNpZW50cy5sZW5ndGg7aSsrKXN5bmRyb21lQ29lZmZpY2llbnRzW2ldPTA7DQoJCQl2YXIgZGF0YU1hdHJpeCA9IGZhbHNlOy8vdGhpcy5maWVsZC5FcXVhbHMoR0YyNTYuREFUQV9NQVRSSVhfRklFTEQpOw0KCQkJdmFyIG5vRXJyb3IgPSB0cnVlOw0KCQkJZm9yICh2YXIgaSA9IDA7IGkgPCB0d29TOyBpKyspDQoJCQl7DQoJCQkJLy8gVGhhbmtzIHRvIHNhbmZvcmRzcXVpcmVzIGZvciB0aGlzIGZpeDoNCgkJCQl2YXIgZXZhbHUgPSBwb2x5LmV2YWx1YXRlQXQodGhpcy5maWVsZC5leHAoZGF0YU1hdHJpeD9pICsgMTppKSk7DQoJCQkJc3luZHJvbWVDb2VmZmljaWVudHNbc3luZHJvbWVDb2VmZmljaWVudHMubGVuZ3RoIC0gMSAtIGldID0gZXZhbHU7DQoJCQkJaWYgKGV2YWx1ICE9IDApDQoJCQkJew0KCQkJCQlub0Vycm9yID0gZmFsc2U7DQoJCQkJfQ0KCQkJfQ0KCQkJaWYgKG5vRXJyb3IpDQoJCQl7DQoJCQkJcmV0dXJuIDsNCgkJCX0NCgkJCXZhciBzeW5kcm9tZSA9IG5ldyBHRjI1NlBvbHkodGhpcy5maWVsZCwgc3luZHJvbWVDb2VmZmljaWVudHMpOw0KCQkJdmFyIHNpZ21hT21lZ2EgPSB0aGlzLnJ1bkV1Y2xpZGVhbkFsZ29yaXRobSh0aGlzLmZpZWxkLmJ1aWxkTW9ub21pYWwodHdvUywgMSksIHN5bmRyb21lLCB0d29TKTsNCgkJCXZhciBzaWdtYSA9IHNpZ21hT21lZ2FbMF07DQoJCQl2YXIgb21lZ2EgPSBzaWdtYU9tZWdhWzFdOw0KCQkJdmFyIGVycm9yTG9jYXRpb25zID0gdGhpcy5maW5kRXJyb3JMb2NhdGlvbnMoc2lnbWEpOw0KCQkJdmFyIGVycm9yTWFnbml0dWRlcyA9IHRoaXMuZmluZEVycm9yTWFnbml0dWRlcyhvbWVnYSwgZXJyb3JMb2NhdGlvbnMsIGRhdGFNYXRyaXgpOw0KCQkJZm9yICh2YXIgaSA9IDA7IGkgPCBlcnJvckxvY2F0aW9ucy5sZW5ndGg7IGkrKykNCgkJCXsNCgkJCQl2YXIgcG9zaXRpb24gPSByZWNlaXZlZC5sZW5ndGggLSAxIC0gdGhpcy5maWVsZC5sb2coZXJyb3JMb2NhdGlvbnNbaV0pOw0KCQkJCWlmIChwb3NpdGlvbiA8IDApDQoJCQkJew0KCQkJCQl0aHJvdyAiUmVlZFNvbG9tb25FeGNlcHRpb24gQmFkIGVycm9yIGxvY2F0aW9uIjsNCgkJCQl9DQoJCQkJcmVjZWl2ZWRbcG9zaXRpb25dID0gR0YyNTYuYWRkT3JTdWJ0cmFjdChyZWNlaXZlZFtwb3NpdGlvbl0sIGVycm9yTWFnbml0dWRlc1tpXSk7DQoJCQl9DQoJfQ0KCQ0KCXRoaXMucnVuRXVjbGlkZWFuQWxnb3JpdGhtPWZ1bmN0aW9uKCBhLCAgYiwgIFIpDQoJCXsNCgkJCS8vIEFzc3VtZSBhJ3MgZGVncmVlIGlzID49IGIncw0KCQkJaWYgKGEuRGVncmVlIDwgYi5EZWdyZWUpDQoJCQl7DQoJCQkJdmFyIHRlbXAgPSBhOw0KCQkJCWEgPSBiOw0KCQkJCWIgPSB0ZW1wOw0KCQkJfQ0KCQkJDQoJCQl2YXIgckxhc3QgPSBhOw0KCQkJdmFyIHIgPSBiOw0KCQkJdmFyIHNMYXN0ID0gdGhpcy5maWVsZC5PbmU7DQoJCQl2YXIgcyA9IHRoaXMuZmllbGQuWmVybzsNCgkJCXZhciB0TGFzdCA9IHRoaXMuZmllbGQuWmVybzsNCgkJCXZhciB0ID0gdGhpcy5maWVsZC5PbmU7DQoJCQkNCgkJCS8vIFJ1biBFdWNsaWRlYW4gYWxnb3JpdGhtIHVudGlsIHIncyBkZWdyZWUgaXMgbGVzcyB0aGFuIFIvMg0KCQkJd2hpbGUgKHIuRGVncmVlID49IE1hdGguZmxvb3IoUiAvIDIpKQ0KCQkJew0KCQkJCXZhciByTGFzdExhc3QgPSByTGFzdDsNCgkJCQl2YXIgc0xhc3RMYXN0ID0gc0xhc3Q7DQoJCQkJdmFyIHRMYXN0TGFzdCA9IHRMYXN0Ow0KCQkJCXJMYXN0ID0gcjsNCgkJCQlzTGFzdCA9IHM7DQoJCQkJdExhc3QgPSB0Ow0KCQkJCQ0KCQkJCS8vIERpdmlkZSByTGFzdExhc3QgYnkgckxhc3QsIHdpdGggcXVvdGllbnQgaW4gcSBhbmQgcmVtYWluZGVyIGluIHINCgkJCQlpZiAockxhc3QuWmVybykNCgkJCQl7DQoJCQkJCS8vIE9vcHMsIEV1Y2xpZGVhbiBhbGdvcml0aG0gYWxyZWFkeSB0ZXJtaW5hdGVkPw0KCQkJCQl0aHJvdyAicl97aS0xfSB3YXMgemVybyI7DQoJCQkJfQ0KCQkJCXIgPSByTGFzdExhc3Q7DQoJCQkJdmFyIHEgPSB0aGlzLmZpZWxkLlplcm87DQoJCQkJdmFyIGRlbm9taW5hdG9yTGVhZGluZ1Rlcm0gPSByTGFzdC5nZXRDb2VmZmljaWVudChyTGFzdC5EZWdyZWUpOw0KCQkJCXZhciBkbHRJbnZlcnNlID0gdGhpcy5maWVsZC5pbnZlcnNlKGRlbm9taW5hdG9yTGVhZGluZ1Rlcm0pOw0KCQkJCXdoaWxlIChyLkRlZ3JlZSA+PSByTGFzdC5EZWdyZWUgJiYgIXIuWmVybykNCgkJCQl7DQoJCQkJCXZhciBkZWdyZWVEaWZmID0gci5EZWdyZWUgLSByTGFzdC5EZWdyZWU7DQoJCQkJCXZhciBzY2FsZSA9IHRoaXMuZmllbGQubXVsdGlwbHkoci5nZXRDb2VmZmljaWVudChyLkRlZ3JlZSksIGRsdEludmVyc2UpOw0KCQkJCQlxID0gcS5hZGRPclN1YnRyYWN0KHRoaXMuZmllbGQuYnVpbGRNb25vbWlhbChkZWdyZWVEaWZmLCBzY2FsZSkpOw0KCQkJCQlyID0gci5hZGRPclN1YnRyYWN0KHJMYXN0Lm11bHRpcGx5QnlNb25vbWlhbChkZWdyZWVEaWZmLCBzY2FsZSkpOw0KCQkJCQkvL3IuRVhFKCk7DQoJCQkJfQ0KCQkJCQ0KCQkJCXMgPSBxLm11bHRpcGx5MShzTGFzdCkuYWRkT3JTdWJ0cmFjdChzTGFzdExhc3QpOw0KCQkJCXQgPSBxLm11bHRpcGx5MSh0TGFzdCkuYWRkT3JTdWJ0cmFjdCh0TGFzdExhc3QpOw0KCQkJfQ0KCQkJDQoJCQl2YXIgc2lnbWFUaWxkZUF0WmVybyA9IHQuZ2V0Q29lZmZpY2llbnQoMCk7DQoJCQlpZiAoc2lnbWFUaWxkZUF0WmVybyA9PSAwKQ0KCQkJew0KCQkJCXRocm93ICJSZWVkU29sb21vbkV4Y2VwdGlvbiBzaWdtYVRpbGRlKDApIHdhcyB6ZXJvIjsNCgkJCX0NCgkJCQ0KCQkJdmFyIGludmVyc2UgPSB0aGlzLmZpZWxkLmludmVyc2Uoc2lnbWFUaWxkZUF0WmVybyk7DQoJCQl2YXIgc2lnbWEgPSB0Lm11bHRpcGx5MihpbnZlcnNlKTsNCgkJCXZhciBvbWVnYSA9IHIubXVsdGlwbHkyKGludmVyc2UpOw0KCQkJcmV0dXJuIG5ldyBBcnJheShzaWdtYSwgb21lZ2EpOw0KCQl9DQoJdGhpcy5maW5kRXJyb3JMb2NhdGlvbnM9ZnVuY3Rpb24oIGVycm9yTG9jYXRvcikNCgkJew0KCQkJLy8gVGhpcyBpcyBhIGRpcmVjdCBhcHBsaWNhdGlvbiBvZiBDaGllbidzIHNlYXJjaA0KCQkJdmFyIG51bUVycm9ycyA9IGVycm9yTG9jYXRvci5EZWdyZWU7DQoJCQlpZiAobnVtRXJyb3JzID09IDEpDQoJCQl7DQoJCQkJLy8gc2hvcnRjdXQNCgkJCQlyZXR1cm4gbmV3IEFycmF5KGVycm9yTG9jYXRvci5nZXRDb2VmZmljaWVudCgxKSk7DQoJCQl9DQoJCQl2YXIgcmVzdWx0ID0gbmV3IEFycmF5KG51bUVycm9ycyk7DQoJCQl2YXIgZSA9IDA7DQoJCQlmb3IgKHZhciBpID0gMTsgaSA8IDI1NiAmJiBlIDwgbnVtRXJyb3JzOyBpKyspDQoJCQl7DQoJCQkJaWYgKGVycm9yTG9jYXRvci5ldmFsdWF0ZUF0KGkpID09IDApDQoJCQkJew0KCQkJCQlyZXN1bHRbZV0gPSB0aGlzLmZpZWxkLmludmVyc2UoaSk7DQoJCQkJCWUrKzsNCgkJCQl9DQoJCQl9DQoJCQlpZiAoZSAhPSBudW1FcnJvcnMpDQoJCQl7DQoJCQkJdGhyb3cgIkVycm9yIGxvY2F0b3IgZGVncmVlIGRvZXMgbm90IG1hdGNoIG51bWJlciBvZiByb290cyI7DQoJCQl9DQoJCQlyZXR1cm4gcmVzdWx0Ow0KCQl9DQoJdGhpcy5maW5kRXJyb3JNYWduaXR1ZGVzPWZ1bmN0aW9uKCBlcnJvckV2YWx1YXRvciwgIGVycm9yTG9jYXRpb25zLCAgZGF0YU1hdHJpeCkNCgkJew0KCQkJLy8gVGhpcyBpcyBkaXJlY3RseSBhcHBseWluZyBGb3JuZXkncyBGb3JtdWxhDQoJCQl2YXIgcyA9IGVycm9yTG9jYXRpb25zLmxlbmd0aDsNCgkJCXZhciByZXN1bHQgPSBuZXcgQXJyYXkocyk7DQoJCQlmb3IgKHZhciBpID0gMDsgaSA8IHM7IGkrKykNCgkJCXsNCgkJCQl2YXIgeGlJbnZlcnNlID0gdGhpcy5maWVsZC5pbnZlcnNlKGVycm9yTG9jYXRpb25zW2ldKTsNCgkJCQl2YXIgZGVub21pbmF0b3IgPSAxOw0KCQkJCWZvciAodmFyIGogPSAwOyBqIDwgczsgaisrKQ0KCQkJCXsNCgkJCQkJaWYgKGkgIT0gaikNCgkJCQkJew0KCQkJCQkJZGVub21pbmF0b3IgPSB0aGlzLmZpZWxkLm11bHRpcGx5KGRlbm9taW5hdG9yLCBHRjI1Ni5hZGRPclN1YnRyYWN0KDEsIHRoaXMuZmllbGQubXVsdGlwbHkoZXJyb3JMb2NhdGlvbnNbal0sIHhpSW52ZXJzZSkpKTsNCgkJCQkJfQ0KCQkJCX0NCgkJCQlyZXN1bHRbaV0gPSB0aGlzLmZpZWxkLm11bHRpcGx5KGVycm9yRXZhbHVhdG9yLmV2YWx1YXRlQXQoeGlJbnZlcnNlKSwgdGhpcy5maWVsZC5pbnZlcnNlKGRlbm9taW5hdG9yKSk7DQoJCQkJLy8gVGhhbmtzIHRvIHNhbmZvcmRzcXVpcmVzIGZvciB0aGlzIGZpeDoNCgkJCQlpZiAoZGF0YU1hdHJpeCkNCgkJCQl7DQoJCQkJCXJlc3VsdFtpXSA9IHRoaXMuZmllbGQubXVsdGlwbHkocmVzdWx0W2ldLCB4aUludmVyc2UpOw0KCQkJCX0NCgkJCX0NCgkJCXJldHVybiByZXN1bHQ7DQoJCX0NCn0="
ARCPhone.ClientFiles["/qr_decode/version.js.txt"] = ""


--ARCPhone.ClientFiles["/camera/0000000000.jpg"] = ""
--[[
ARCPhone.ClientFilesDL = {}
for i=1,14 do
	ARCPhone.ClientFilesDL[i] = "/camera/phone_"..tostring(i-1)..".png"
end
]]
